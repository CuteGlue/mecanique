%%% Script for the second case:%%%  f(r) = f0*H(r-r0)clear all;close all;clfclcUh0 = zeros(1,5); %% les valeurs de l'approximation en r=0Uex0 = zeros(1,5); %% le valeurs de la soln. exacte en r=0for m = 1:5  xi = linspace(-1,1,m+1);  xr = linspace(0,1,m+1);  r = linspace(0,1,100);  xx = linspace(-1,1,100);  Uh = zeros(1,m+1);  %%% Construir les matrices :  A = Ak (m);  B = B2k (m);  %%% conditions aux limites :  B(m+1) = 0;  for i = 1:m+1    if i==m+1      A(m+1,i) = 1;    else      A(m+1,i) = 0;    end  end  %%% Trouver la solution approchee:  Uh = transpose(A\B);  %%% Filling out the approximate solution (for a more continuous look)  ph = polyfit(xr,Uh,m);  Uhh = polyval(ph,r);  Uh0(m) = Uh(1);  %%% La solution exacte:  r0 = 0.47;  f0 = 94;  Uex = zeros(1,length(xi));  for i = 1:length(r)  %% compute heaviside    if abs(r(i)-r0)<=0.5      heaviside = 1;    else      heaviside = 0;    end      Uex(i) = 47*(r(i)**2-1)*heaviside/2;  end     Uex0(m) = Uex(1);  %%% Plotting solutions:  figure(m)  hold on;   plot(xr,Uh,'r .','markersize',10)  plot(r,Uhh,'r -.')  plot(r,Uex,'b')  title("Deuxieme Cas - Second Membre Heaviside", 'fontsize', 12)  xlabel("r", 'fontsize', 12)  ylabel("U(r) & Uh(r)", 'fontsize', 12)  h=legend("Uh*","Uh-smooth","U-exact",'location','southeast')  set(h,"fontsize",12)end%% Error Calculationxerr = zeros(1,5);Err = zeros(1,5);for i = 1:5  Err(i) = abs(Uh0(i)-Uex0(i))*100/abs(Uex0(i));  xerr(i) = i;endfigure(6)plot(xerr,Err,'r .-','markersize',10)title("Precision en r=0 - Deuxieme Cas",'fontsize',12)xlabel("Degre du polynome (m)",'fontsize',12)ylabel("Precision (%)",'fontsize',12)